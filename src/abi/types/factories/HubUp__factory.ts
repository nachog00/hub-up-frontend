/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HubUp, HubUpInterface } from "../HubUp";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_usdcToken",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "blockEventPayment",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimHostPayment",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimParticipantStake",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "participant",
        type: "address",
        internalType: "address",
      },
      {
        name: "code",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createEvent",
    inputs: [
      {
        name: "startTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "endTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "price",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "stakeAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minParticipants",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "maxParticipants",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "events",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "host",
        type: "address",
        internalType: "address",
      },
      {
        name: "startTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "endTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "price",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "stakeAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minParticipants",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "maxParticipants",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "participantCount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "unstakedParticipantCount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "totalParticipantsJoined",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "isFinalized",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "isPaymentBlocked",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "eventCode",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "joinEvent",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "leaveEvent",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "participant",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "nextEventId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "takeHostPaymentByOwner",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unblockEventPayment",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "usdcToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "EventCreated",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "host",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "eventCode",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EventFormalized",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EventPaymentBlocked",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EventPaymentUnblocked",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ParticipantJoined",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "participant",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ParticipantLeft",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "participant",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PaymentClaimed",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "host",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PaymentSentBack",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "participant",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StakeClaimed",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "participant",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60803461007a57601f611d3538819003918201601f19168301916001600160401b0383118484101761007f5780849260209460405283398101031261007a57516001600160a01b0381169081900361007a5760018060a01b0319338160005416176000556001541617600155604051611c9f90816100968239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806291ac29146114ab5780630b791430146113c457806311eac8551461139057806338d361e2146110e0578063455b4cda14610f125780635a74070214610c7d57806362d76178146104115780638da5cb5b146103dd5780639f9d903a146103bf578063a88e4d7f14610326578063ab6911ed146102915763d69e43401461009f57600080fd5b3461028c5760208060031936011261028c5773ffffffffffffffffffffffffffffffffffffffff80600054166100d6813314611a67565b60043560005260038352604060002060ff600a82015460081c1615610248579183916101508461014760036101b0970154600661013e61011b60098601548094611a27565b610138610132600488015495600889015490611a1a565b85611a27565b90611a0d565b93015490611a27565b60011c90611a0d565b91600154169060006040518096819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af190811561023c5760009161020f575b50156101cb57005b6064906040519062461bcd60e51b82526004820152601760248201527f5061796d656e74207472616e73666572206661696c65640000000000000000006044820152fd5b61022f9150823d8411610235575b610227818361180c565b8101906119f5565b386101c3565b503d61021d565b6040513d6000823e3d90fd5b6064846040519062461bcd60e51b82526004820152601b60248201527f486f7374207061796d656e74206973206e6f7420626c6f636b656400000000006044820152fd5b600080fd5b3461028c57602060031936011261028c576004356102c873ffffffffffffffffffffffffffffffffffffffff600054163314611a67565b806000526003602052600a6040600020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff81541690557f52ff305c4c5d987bc76eb1cf97bc0f38d1c5c0ba85b5569c064cde0d551870ba600080a2005b3461028c57602060031936011261028c5760043561035d73ffffffffffffffffffffffffffffffffffffffff600054163314611a67565b806000526003602052600a6040600020016101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff8254161790557f491a1bcaf86f7d255544e5078a2dc4bbc2c5b20f67cdbcd99e0e4a1f960a56d7600080a2005b3461028c57600060031936011261028c576020600254604051908152f35b3461028c57600060031936011261028c57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b3461028c5760c060031936011261028c574260043510610c13576004356024351115610ba95762015180600435018060043511610b7a5760243511610b105761049260405161045f816117f0565b601f81527f4372656174696e67206576656e7420776974682073746172742074696d653a00602082015260043590611ab2565b6000806040516104a1816117f0565b600d81527f486f737420616464726573733a0000000000000000000000000000000000000060208201526040516105228161050e60208201947f319af333000000000000000000000000000000000000000000000000000000008652604060248401526064830190611985565b33604483015203601f19810183528261180c565b51906a636f6e736f6c652e6c6f675afa50600060206105b061054860a435606435611a27565b600180546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201529290911c60448301529093849273ffffffffffffffffffffffffffffffffffffffff9092169183919082906064820190565b03925af190811561023c57600091610af1575b5015610aad576002546105d581611a3a565b600255610617816040516105e8816117f0565b600881527f6576656e7449643a0000000000000000000000000000000000000000000000006020820152611ab2565b8060005260036020526040600020337fffffffffffffffffffffffff00000000000000000000000000000000000000008254161781556004356001820155602435600282015560443560038201556064356004820155608435600582015560a4356006820155600a81017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000081541690556106e76040516106b6816117f0565b601081527f626c6f636b2e74696d657374616d703a0000000000000000000000000000000060208201524290611ab2565b6040519160208301924284523360601b6040820152603481526060810167ffffffffffffffff9482821086831117610a7e5761072e92620f42409260405251902006611b23565b928351908111610a7e57610745600b84015461184b565b601f8111610a33575b506020601f82116001146109a7578192939460009261099c575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c191617600b8301555b6000806040516107ac816117f0565b600a81527f6576656e74436f64653a00000000000000000000000000000000000000000000602082015261085a6108686107e8600b880161189e565b60405192839161082a60208401967f4b5c4277000000000000000000000000000000000000000000000000000000008852604060248601526064850190611985565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc848303016044850152611985565b03601f19810183528261180c565b51906a636f6e736f6c652e6c6f675afa5060405160208152600b8301546000936108918261184b565b9182602085015260018116908160001461093b57506001146108da575b5050807ffc695dea2478fb938a11068aeedddd7046a5fe655f136e30a325d353fe187a459133940390a3005b600b919294500160005260206000206000905b828210610924575083016040019290507ffc695dea2478fb938a11068aeedddd7046a5fe655f136e30a325d353fe187a45846108ae565b6001816020925460408589010152019101906108ed565b7ffc695dea2478fb938a11068aeedddd7046a5fe655f136e30a325d353fe187a4594965060409392507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682860152151560051b8401019290846108ae565b015190508480610768565b600b840160005260206000209060005b601f1984168110610a1b5750600193949583601f198116106109e4575b505050811b01600b83015561079d565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690558480806109d4565b9091602060018192858a0151815501930191016109b7565b600b84016000526020600020601f830160051c81019160208410610a74575b601f0160051c01905b818110610a68575061074e565b60008155600101610a5b565b9091508190610a52565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b606460405162461bcd60e51b815260206004820152601460248201527f5374616b65206465706f736974206661696c65640000000000000000000000006044820152fd5b610b0a915060203d60201161023557610227818361180c565b816105c3565b608460405162461bcd60e51b815260206004820152602560248201527f4576656e74206475726174696f6e2063616e6e6f74206578636565642032342060448201527f686f7572730000000000000000000000000000000000000000000000000000006064820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b608460405162461bcd60e51b815260206004820152602a60248201527f456e642074696d652063616e6e6f74206265206561726c696572207468616e2060448201527f73746172742074696d65000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602e60248201527f53746172742074696d652063616e6e6f74206265206561726c6965722074686160448201527f6e2063757272656e742074696d650000000000000000000000000000000000006064820152fd5b3461028c5760208060031936011261028c57600435806000526003825273ffffffffffffffffffffffffffffffffffffffff9182604060002054163303610ece5781600052600381526040600020926002840154620151808101809111610b7a57421115610e8a5760ff600a85015460081c16610e4657610d346003850154610147610d28610d1160098901548094611a27565b61013861013260048b01549560088c015490611a1a565b91600688015490611a27565b93610d9d838684600154168585541660006040518096819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af190811561023c57600091610e29575b5015610de5575460405194855216927fdd74eb9cba06f514be98342b0ed0290146aee9feaf27e8a7ddcb151bb43dac869190a3005b6064836040519062461bcd60e51b82526004820152601460248201527f5061796d656e7420636c61696d206661696c65640000000000000000000000006044820152fd5b610e409150843d861161023557610227818361180c565b86610db0565b6064826040519062461bcd60e51b82526004820152601760248201527f486f7374207061796d656e7420697320626c6f636b65640000000000000000006044820152fd5b6064826040519062461bcd60e51b82526004820152601860248201527f436c61696d20706572696f64206e6f74207374617274656400000000000000006044820152fd5b6064906040519062461bcd60e51b82526004820152601260248201527f4e6f7420746865206576656e7420686f737400000000000000000000000000006044820152fd5b3461028c57604060031936011261028c57600435610f2e6117cd565b90806000526020916003835260406000209273ffffffffffffffffffffffffffffffffffffffff8092169384600052600c81018252610f7460ff604060002054166119aa565b600d8101928560005283835260ff6040600020541661109c5781541633148015611093575b15611029576007018054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201918211610b7a57558360005252604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790557f30ebfca8d8c33a64628fc8395fa0f6c5ab0ed13bd4c8cc489ccf5c73c40e6b0d600080a3005b6084826040519062461bcd60e51b82526004820152603160248201527f4f6e6c792074686520686f7374206f7220746865207061727469636970616e7460448201527f2063616e206d61726b206173206c6566740000000000000000000000000000006064820152fd5b50843314610f99565b6064836040519062461bcd60e51b82526004820152601660248201527f416c7265616479206d61726b6564206173206c656674000000000000000000006044820152fd5b3461028c5760208060031936011261028c57600435908160005260038152604060002090600782019081546006840154111561134c57600c8301903360005281815260ff60406000205416611308576000816111ae6111486003880154600489015490611a0d565b6001546040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101929092529093849273ffffffffffffffffffffffffffffffffffffffff9092169183919082906064820190565b03925af190811561023c576000916112eb575b50156112a757336000525260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009060018282541617905581549160018301809311610b7a578290556009830180549060018201809211610b7a5755600a83019283549260ff8416159182611298575b5050611264575b33847f7dd8cb04159701bc1976c246434d7d96812782e7489e6c5c34db49a388fe9e80600080a3005b166001179055807f9922b8904eac0de08ab5b78b46404552ec43b5e8ce957d4147f3bdffb9cf9c25600080a281808061123b565b60050154111590508580611234565b6064906040519062461bcd60e51b82526004820152600e60248201527f5061796d656e74206661696c65640000000000000000000000000000000000006044820152fd5b6113029150823d841161023557610227818361180c565b866111c1565b6064906040519062461bcd60e51b82526004820152601960248201527f416c7265616479206a6f696e65642074686973206576656e74000000000000006044820152fd5b6064906040519062461bcd60e51b82526004820152600d60248201527f4576656e742069732066756c6c000000000000000000000000000000000000006044820152fd5b3461028c57600060031936011261028c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b3461028c57602060031936011261028c5760043560005260036020526040806000206114a773ffffffffffffffffffffffffffffffffffffffff8254169160018101549260ff6002830154926003810154600482015460058301546006840154600785015491600886015493600987015495611447600b600a8a0154990161189e565b9a8e519e8f9e8f906101a09d82526020820152015260608d015260808c015260a08b015260c08a015260e0890152610100880152610120870152818116151561014087015260081c16151561016085015280610180850152830190611985565b0390f35b3461028c57606060031936011261028c576004356114c76117cd565b906044359167ffffffffffffffff831161028c573660238401121561028c5782600401356114f48161182f565b93611502604051958661180c565b81855260209182860191366024838301011161028c57816000926024869301853787010152836000526003825260406000209073ffffffffffffffffffffffffffffffffffffffff908185169687600052600c8401855261156a60ff604060002054166119aa565b61159285604051809361158583830196879251928391611962565b810103808452018261180c565b519020600b83016040518581019181600082546115ae8161184b565b936001918b60018216918260001461178f57505060011461174f575b50506115df925003601f19810183528261180c565b5190200361170b5782611653916001541694600484019586549160006040518096819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af190811561023c576000916116ee575b50156116aa5760080191825460018101809111610b7a577f179c71ca886dcb57d7ec21b21417e53762b259503250d3c13169430c96fe6240935554604051908152a3005b6064826040519062461bcd60e51b82526004820152601360248201527f5374616b6520726566756e64206661696c6564000000000000000000000000006044820152fd5b6117059150833d851161023557610227818361180c565b86611666565b6064836040519062461bcd60e51b82526004820152600e60248201527f496e636f727265637420636f64650000000000000000000000000000000000006044820152fd5b8a925060005281600020906000915b858310611776575050506115df928201018c806115ca565b819392945080548386890101520192018991859361175e565b915093506115df9592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009150168652801515028201018c806115ca565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361028c57565b6040810190811067ffffffffffffffff821117610a7e57604052565b90601f601f19910116810190811067ffffffffffffffff821117610a7e57604052565b67ffffffffffffffff8111610a7e57601f01601f191660200190565b90600182811c92168015611894575b602083101461186557565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f169161185a565b906040519182600082546118b18161184b565b9081845260209460019160018116908160001461192157506001146118e2575b5050506118e09250038361180c565b565b600090815285812095935091905b8183106119095750506118e093508201013880806118d1565b855488840185015294850194879450918301916118f0565b9150506118e09593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201013880806118d1565b60005b8381106119755750506000910152565b8181015183820152602001611965565b90601f19601f6020936119a381518092818752878088019101611962565b0116010190565b156119b157565b606460405162461bcd60e51b815260206004820152601160248201527f4e6f742061207061727469636970616e740000000000000000000000000000006044820152fd5b9081602091031261028c5751801515810361028c5790565b91908201809211610b7a57565b91908203918211610b7a57565b81810292918115918404141715610b7a57565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b7a5760010190565b15611a6e57565b606460405162461bcd60e51b815260206004820152601660248201527f4e6f742074686520636f6e7472616374206f776e6572000000000000000000006044820152fd5b600091908291611b106040518092611afc60208301957f9710a9d0000000000000000000000000000000000000000000000000000000008752604060248501526064840190611985565b90604483015203601f19810183528261180c565b51906a636f6e736f6c652e6c6f675afa50565b8015611c2f57600081805b611c1b5750611b3c8161182f565b90611b4a604051928361180c565b808252601f19611b598261182f565b013660208401375b80928015611c14577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201918211610b7a578193600a926030908484068201809211610b7a5785511115611be55760f81b7fff000000000000000000000000000000000000000000000000000000000000001660001a908401601f01530491611b61565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b5050905090565b90611c27600a91611a3a565b910480611b2e565b50604051611c3c816117f0565b600181527f300000000000000000000000000000000000000000000000000000000000000060208201529056fea26469706673582212205051dcbffb1d7cc95375c8eae9f26ff763d2941bf14704364b08a121603679d364736f6c63430008170033";

type HubUpConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HubUpConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HubUp__factory extends ContractFactory {
  constructor(...args: HubUpConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _usdcToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<HubUp> {
    return super.deploy(_usdcToken, overrides || {}) as Promise<HubUp>;
  }
  override getDeployTransaction(
    _usdcToken: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_usdcToken, overrides || {});
  }
  override attach(address: string): HubUp {
    return super.attach(address) as HubUp;
  }
  override connect(signer: Signer): HubUp__factory {
    return super.connect(signer) as HubUp__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HubUpInterface {
    return new utils.Interface(_abi) as HubUpInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): HubUp {
    return new Contract(address, _abi, signerOrProvider) as HubUp;
  }
}
